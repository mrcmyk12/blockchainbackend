/**
 * Ensure that provided `str` contains only HEX characters and not longer than specified `length`.
 * @param {string} str Source string which should be updated (if required).
 * @param {number} length Maximum length of string after it has been updated.
 *
 * @return {string} String which contains only HEX characters.
 */
export const hexString = (str: string, length: number) => {
  const hexChars = '0123456789abcdefABCDEF'

  let result = str
    .split('')
    .map(char =>
      hexChars.indexOf(char) === -1 ? char.charCodeAt(0).toString(16) : char
    )
    .join('')

  if (length - result.length < 0) result = result.substr(0, length)
  else {
    const count = Math.floor(length / result.length)

    for (let it = 0; it < count; it++) result += result
    if (result.length - length > 0) result += result.substr(0, result.length - length)
  }

  return result
}

/**
 * Replace specified
 * @param {string} src Source string in which replacement should be done.
 * @param {string} str String which should be replaced.
 * @param {string} replacement String which should be used to replace `str`.
 * @param {number|undefined} index Index in string starting from which replacement should happen.
 *
 * @return {string} Modified string with replaced pieces.
 */
export const replaceString = (src: string, str: string, replacement: string, index?: number): string => {
  if (index === undefined) return src.replace(new RegExp(str, 'g'), replacement)
  else return src.substring(0, index) + replacement + src.substring(index + str.length)
}

/**
 * Capitalize first character of passed string.
 *
 * @param {string} str Source string for which first letter should be capitalized.
 *
 * @return {string} Capitalized string.
 */
export const capitalizedString = (str: string): string =>
  `${str.replace(/^./, str[0].toUpperCase())}`

/**
 * Make first character of passed string lowercase.
 *
 * @param {string} str Source string for which first letter should be lower cased.
 *
 * @return {string} Lower cased string.
 */
export const lowerCasedString = (str: string): string =>
  `${str.replace(/^./, str[0].toLowerCase())}`
