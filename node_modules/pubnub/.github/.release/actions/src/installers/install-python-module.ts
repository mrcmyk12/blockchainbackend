import {cliExec, CLIExecResult} from '../helpers/cli'

/**
 * Install / update Python `pip` module.
 *
 * @param {boolean} localUser Whether `pip` should be installed / updated globally or for user.
 *
 * @return {Promise<CLIExecResult>} `pip install --upgrade` command execution results.
 */
export const installPIP = async (localUser: boolean): Promise<CLIExecResult> => {
  let cliArguments = ['-m', 'pip', 'install', '--upgrade']

  if (localUser) cliArguments.push('--user')
  cliArguments.push('--no-warn-script-location', 'pip', 'setuptools', 'wheel')

  return await cliExec({cli: 'python', commandOrFlags: cliArguments})
}

/**
 * Install specified Python `module` using `pip`.
 *
 * @param {string} module Name of module to install.
 * @param {boolean} localUser Whether modules should be installed globally or for user.
 * @param {string[]} args List of additional arguments which will be passed to `pip`.
 *
 * @return {Promise<CLIExecResult>} `pip install` command execution results.
 */
export const installModule = async (module: string, localUser: boolean, args?: string[]): Promise<CLIExecResult> => {
  let cliArguments = ['-m', 'pip', 'install', module]

  if (localUser) cliArguments.push('--user')
  cliArguments.push('--no-warn-script-location', ...(args ?? []))

  return await cliExec({cli: 'python', commandOrFlags: cliArguments})
}
